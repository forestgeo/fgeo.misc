% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inout_xlff_to_output.R
\name{xlff_to_output}
\alias{xlff_to_output}
\alias{xlff_to_csv}
\alias{xlff_to_xl}
\alias{xlff_to_list}
\title{Read and wrangle excel-FastField and output dataframes or .csv/.xlsx files.}
\usage{
xlff_to_csv(dir_in, dir_out = "./", first_census = FALSE)

xlff_to_xl(dir_in, dir_out = "./", first_census = FALSE)

xlff_to_list(dir_in, first_census = FALSE, root_columns = NULL)
}
\arguments{
\item{dir_in}{String giving the directory containing the excel workbooks
to read from.}

\item{dir_out}{String giving the directory where to write .csv files to.}

\item{first_census}{Use \code{TRUE} if this is your first census. Use \code{FALSE}
(default) if this is not your first census but a recensus.}

\item{root_columns}{String. Lowercase name of column(s) in the root sheet (
e.g. c("date", "team")). This is useful when you data has non-standard
columns.}
}
\value{
\code{xlff_to_csv()} and \code{xlff_to_xl()} write a .csv or excel (.xlsx) file
per workbook -- combining all spreadsheets. \code{xlff_to_list} outputs a list
where each dataframes combines all spreadsheeets of a workbook.
}
\description{
These functions read and wrangle excel workbooks produced by the FastField
app and output a list of dataframes (\code{xlff_to_list()}), .csv files
(\code{xlff_to_csv()}) or .xlsx files (\code{xlff_to_xl()}). Each dataframe or file
combines all spreadsheets from a single excel workbook in the input
directory. If the input directory has multiple workbooks, the output will be
multiple dataframes, multiple .csv files, or multiple .excel files.
}
\details{
This is a rigid function with a very specific goal: To process data from
FastField forms. Specifically, this is what this function does:
\itemize{
\item Reads each spreadsheet from each workbook and map it to a dataframe.
\item Lowercases and links the names of each dataframe.
\item Adds any missing \strong{key-sheets}:
\itemize{
\item For first census: (1) "root", (2) "multi_stems", (3) "secondary_stems",
and (4) "single_stems".
\item For recensus: (1) "root", (2) "original_stems", (3)
"new_secondary_stems", and (4) "recruits"
}
\item Dates the data by \code{submission_id} (\code{date} comes from the spreadsheet
\code{root}).
\item Lowercases and links the names of each dataframe-variable.
\item Drops fake stems.
\item Output a common data structure of your choice.
}
}
\section{Acknowledgment}{

\itemize{
\item Sabrina Russo helped to make these functions useful with first censuses.
\item David Orwig helped to fix a debug.
}
}

\examples{
library(fs)
library(readr)
library(readxl)

# NOT A FIRST CENSUS
# Path to the folder I want to read excel files from
dir_in <- dirname(misc_example("two_files/new_stem_1.xlsx"))
dir_in

# Files I want to read
dir(dir_in, pattern = "xlsx")

# Path to the folder I want to write .csv files to
dir_out <- tempdir()

# Output a csv file
xlff_to_csv(dir_in, dir_out)

# Confirm
path_file(dir_ls(dir_out, regexp = "new_stem.*csv$"))

# Also possible to output excel and a list of dataframe. See next section.

# FIRST CENSUS
dir_in <- dirname(misc_example("first_census/census.xlsx"))
# As a reminder you will get a warning of missing sheets
# Output list of dataframes (one per input workbook -- here only one)
lst <- xlff_to_list(dir_in, first_census = TRUE)
str(lst, give.attr = FALSE)

# Output excel
xlff_to_xl(dir_in, dir_out, first_census = TRUE)
# Read back
filename <- path(dir_out, "census.xlsx")
out <- read_excel(filename)
str(out, give.attr = FALSE)
}
\author{
Mauro Lepore and Jessica Shue.
}
